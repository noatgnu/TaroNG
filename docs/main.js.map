{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/class/query.ts","./src/app/class/result.ts","./src/app/components/query-form/query-form.component.ts","./src/app/components/query-form/query-form.component.html","./src/app/components/result-table/result-table.component.ts","./src/app/components/result-table/result-table.component.html","./src/app/services/database.service.ts","./src/app/services/query.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {DatabaseService} from './services/database.service';\nimport {QueryService} from './services/query.service';\nimport {Observable} from 'rxjs';\nimport {Query} from './class/query';\nimport {Result} from './class/result';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.styl']\n})\nexport class AppComponent implements OnInit{\n  title = 'TaroNG';\n  queryObserve: Observable<Query>;\n  queryStartObserve: Observable<boolean>;\n  result: Result[] = [];\n  constructor(private db: DatabaseService, private queryService: QueryService) {\n    this.queryObserve = this.queryService.querySourceReader;\n    this.queryStartObserve = this.queryService.queryStartReader;\n  }\n\n  ngOnInit(): void {\n\n    this.queryObserve.subscribe(query => {\n      this.db.get_database(query).subscribe(data => {\n        const r = new Result(data.body['database'], JSON.parse(data.body['data']), data.body['columns']);\n        console.log(r);\n        this.result.push(r);\n      });\n    });\n  }\n\n  clearResult(): void {\n    this.result = [];\n  }\n}\n","<nav class=\"navbar navbar-light bg-light\">\n  <a class=\"navbar-brand mb-0 h1\">TARO</a>\n</nav>\n\n<div class=\"container-fluid mt-2\">\n  <app-query-form></app-query-form>\n</div>\n\n<div class=\"mt-2\" *ngIf=\"result.length > 0\">\n  <button class=\"button btn btn-primary\" (click)=\"clearResult()\">Clear</button>\n  <div class=\"card mt-2\">\n    <div class=\"card-body\">\n      <ul class=\"mt-2\" ngbNav #nav=\"ngbNav\" class=\"nav-tabs\">\n        <li ngbNavItem *ngFor=\"let r of result\">\n          <a ngbNavLink>{{r.database}} ({{r.result.length}})</a>\n          <ng-template ngbNavContent>\n            <app-result-table [resultData]=\"r\"></app-result-table>\n          </ng-template>\n        </li>\n      </ul>\n      <div [ngbNavOutlet]=\"nav\"></div>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DatabaseService} from './services/database.service';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { QueryFormComponent } from './components/query-form/query-form.component';\nimport {QueryService} from './services/query.service';\nimport { ResultTableComponent } from './components/result-table/result-table.component';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QueryFormComponent,\n    ResultTableComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgxDatatableModule\n  ],\n  providers: [\n    DatabaseService,\n    QueryService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Query {\n  constructor(database: string, peptideSeq: string, startCodon: string, endCodon: string, pageOffset: number) {\n    this.database = database;\n    this.peptideSeq = peptideSeq;\n    this.startCodon = startCodon;\n    this.endCodon = endCodon;\n    this.pageOffset = pageOffset;\n  }\n  database: string;\n  peptideSeq: string;\n  startCodon: string;\n  endCodon: string;\n  pageOffset: number;\n  result: {};\n}\n","export class Result {\n  database: string;\n  columns: string[];\n  constructor(database: string, result: {}, columns: string[]) {\n    this.database = database;\n    this.result = result;\n    this.columns = columns;\n  }\n\n  result: {};\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {Query} from '../../class/query';\nimport {QueryService} from '../../services/query.service';\n\n@Component({\n  selector: 'app-query-form',\n  templateUrl: './query-form.component.html',\n  styleUrls: ['./query-form.component.styl']\n})\nexport class QueryFormComponent implements OnInit {\n  query = new Query('', '', '', '', 0);\n  queryForm: FormGroup;\n  constructor(private formBuilder: FormBuilder, private queryService: QueryService) {\n    this.queryForm = this.formBuilder.group({\n      peptideSeq: '',\n      startCodon: '',\n      endCodon: '',\n      database: ['upep'],\n    });\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  submitQuery(): void {\n    this.queryService.announceStartQuery(false);\n    this.query.peptideSeq = this.queryForm.value.peptideSeq;\n    this.query.startCodon = this.queryForm.value.startCodon;\n    this.query.endCodon = this.queryForm.value.endCodon;\n    for (const db of this.queryForm.value.database) {\n      this.query.database = db;\n      console.log('Submit query.');\n      this.queryService.announceQuery(this.query);\n    }\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">Query Form</h5>\n    <form [formGroup]=\"queryForm\" (ngSubmit)=\"submitQuery()\">\n      <div class=\"form-group\">\n        <label for=\"PeptideSequenceTextSearch\">Peptide Sequence:</label>\n        <input formControlName=\"peptideSeq\" type=\"text\" class=\"form-control\" id=\"PeptideSequenceTextSearch\" aria-describedby=\"PetideText\">\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-6\">\n          <label for=\"StartCodonText\">Start Codon:</label>\n          <input formControlName=\"startCodon\" type=\"text\" class=\"form-control\" id=\"StartCodonText\" aria-describedby=\"StartCodonText\">\n        </div>\n        <div class=\"form-group col-6\">\n          <label for=\"StopCodonText\">Stop Codon:</label>\n          <input formControlName=\"endCodon\" type=\"text\" class=\"form-control\" id=\"StopCodonText\" aria-describedby=\"StopCodonText\">\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"col-4\">\n          <label for=\"databaseSelection\">Database:</label>\n          <select class=\"custom-select\" formControlName=\"database\" multiple id=\"databaseSelection\" aria-describedby=\"DatabaseChoices\">\n            <option>\n              ncEP\n            </option>\n            <option>\n              smProt\n            </option>\n            <option>\n              upep\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"form-row mt-2\">\n        <button class=\"button btn btn-primary\" type=\"submit\">Submit</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Result} from '../../class/result';\nimport {ColumnMode} from '@swimlane/ngx-datatable';\n\n@Component({\n  selector: 'app-result-table',\n  templateUrl: './result-table.component.html',\n  styleUrls: ['./result-table.component.styl']\n})\nexport class ResultTableComponent implements OnInit {\n  columns = [];\n  get resultData(): Result {\n    return this._resultData;\n  }\n  columnMode = ColumnMode;\n  @Input() set resultData(value: Result) {\n    this._resultData = value;\n    this.columns = [];\n    for (const c of this._resultData.columns) {\n      this.columns.push(c);\n    }\n\n  }\n\n  private _resultData: Result;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"resultData\" class=\"mt-2\">\n  <ngx-datatable\n          style=\"height: 700px\"\n          class=\"material fullscreen\"\n          [rows]=\"resultData.result\"\n          [columns]=\"columns\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          [rowHeight]=\"50\"\n          [scrollbarV]=\"true\"\n          [scrollbarH]=\"true\"\n          [columnMode]=\"columnMode.standard\"\n  >\n\n  </ngx-datatable>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Query} from '../class/query';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  private baseURL = 'http://localhost:8000/';\n  constructor(private http: HttpClient) { }\n\n  get_database(query: Query): Observable<HttpResponse<{}>> {\n    let params = new HttpParams();\n    params = params.append('db', query.database);\n    params = params.append('peptideSeq', query.peptideSeq);\n    params = params.append('startCodon', query.startCodon);\n    params = params.append('endCodon', query.endCodon);\n    params = params.append('pageOffset', JSON.stringify(query.pageOffset));\n    const url = this.baseURL + 'api/';\n    return this.http.get(url, {observe: 'response', params});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Subject} from 'rxjs';\nimport {Query} from '../class/query';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryService {\n  private querySource = new Subject<Query>();\n  querySourceReader = this.querySource.asObservable();\n  private queryStartSource = new BehaviorSubject<boolean>(null);\n  queryStartReader = this.queryStartSource.asObservable();\n  constructor() { }\n\n  announceQuery(query: Query): void {\n    this.querySource.next(query);\n  }\n\n  announceStartQuery(status: boolean): void {\n    this.queryStartSource.next(status);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}